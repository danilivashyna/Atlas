[build-system]
requires = [ "setuptools>=45", "wheel", "setuptools_scm>=6.2",]
build-backend = "setuptools.build_meta"

[project]
name = "atlas-semantic-space"
version = "0.2.0a1"
description = "Atlas - Semantic Space Control Panel: A 5D interface between abstract meaning and concrete form"
readme = "README.md"
requires-python = ">=3.8"
keywords = [ "nlp", "semantic-space", "interpretability", "explainable-ai", "embeddings", "dimensionality-reduction",]
classifiers = [ "Development Status :: 3 - Alpha", "Intended Audience :: Developers", "Intended Audience :: Science/Research", "License :: OSI Approved :: MIT License", "Programming Language :: Python :: 3", "Programming Language :: Python :: 3.8", "Programming Language :: Python :: 3.9", "Programming Language :: Python :: 3.10", "Programming Language :: Python :: 3.11", "Programming Language :: Python :: 3.12", "Topic :: Scientific/Engineering :: Artificial Intelligence", "Topic :: Text Processing :: Linguistic",]
dependencies = [ "numpy>=1.20.0", "torch>=1.9.0", "transformers>=4.20.0", "matplotlib>=3.4.0", "plotly>=5.0.0", "scikit-learn>=0.24.0",]
[[project.authors]]
name = "danilivashyna"
email = "danilivashyna@gmail.com"

[[project.maintainers]]
name = "danilivashyna"
email = "danilivashyna@gmail.com"

[project.license]
text = "AGPL-3.0-or-later"

[project.optional-dependencies]
dev = [ "httpx>=0.24.0",  "pytest>=6.0", "pytest-cov>=2.12", "pytest-xdist>=2.5", "black>=22.0", "isort>=5.10", "flake8>=4.0", "mypy>=0.950",]
api = [ "fastapi>=0.100.0", "uvicorn[standard]>=0.20.0", "pydantic>=2.0.0",]
mlops = [ "wandb>=0.15.0", "mlflow>=2.0.0",]
all = [ "atlas-semantic-space[dev,api,mlops]",]

[project.urls]
Homepage = "https://github.com/danilivashyna/Atlas"
Documentation = "https://github.com/danilivashyna/Atlas/blob/main/DOCUMENTATION.md"
Repository = "https://github.com/danilivashyna/Atlas"
Issues = "https://github.com/danilivashyna/Atlas/issues"

[project.scripts]
atlas = "atlas.cli:main"

[tool.black]
line-length = 100
target-version = [ "py38", "py39", "py310", "py311", "py312",]
include = "\\.pyi?$"
extend-exclude = "/(\n  # directories\n  \\.eggs\n  | \\.git\n  | \\.hg\n  | \\.mypy_cache\n  | \\.tox\n  | \\.venv\n  | build\n  | dist\n)/\n"

[tool.isort]
profile = "black"
line_length = 100
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
use_parentheses = true
ensure_newline_before_comments = true
split_on_trailing_comma = true
skip_gitignore = true

[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = false
disallow_incomplete_defs = false
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
follow_imports = "normal"
ignore_missing_imports = true
[[tool.mypy.overrides]]
module = [ "torch.*", "transformers.*", "sklearn.*", "plotly.*",]
ignore_missing_imports = true

[tool.setuptools.package-dir]
"" = "src"

[tool.pytest.ini_options]
minversion = "6.0"
addopts = [ "-ra", "--strict-markers", "--strict-config", "--showlocals",]
testpaths = [ "tests",]
python_files = [ "test_*.py", "*_test.py",]
python_classes = [ "Test*",]
python_functions = [ "test_*",]
markers = [ "slow: marks tests as slow (deselect with '-m \"not slow\"')", "integration: marks tests as integration tests", "api: marks tests that require API server", "gpu: marks tests that require GPU",]

[tool.coverage.run]
source = [ "src/atlas",]
omit = [ "*/tests/*", "*/test_*.py", "*/__init__.py",]

[tool.coverage.report]
exclude_lines = [ "pragma: no cover", "def __repr__", "raise AssertionError", "raise NotImplementedError", "if __name__ == .__main__.:", "if TYPE_CHECKING:", "@abstractmethod",]

[tool.setuptools.packages.find]
where = [ "src",]
include = [ "atlas*",]
